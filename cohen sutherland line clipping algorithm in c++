#include <windows.h>
#include<GL/glut.h>
#include<math.h>
#include<stdio.h>
#include<iostream>
using namespace std;
int outcode();
void LineClipping();
float xmin=-100,ymin=-100,xmax=100,ymax=100;
float xd1,yd1,xd2,yd2;
int hh,hhh;


void init(int w, int h)
{

    glClearColor(1.0, 1.0, 1.0, 1.0);
    glViewport(0,0, (GLsizei)w,(GLsizei)h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D( (GLdouble)w/-2,(GLdouble)w/2, (GLdouble)h/-2, (GLdouble)h/2);

}
void display()
{

   glClear(GL_COLOR_BUFFER_BIT);

       int i=0;

    glPointSize(1);
    glLineWidth(2);
    glColor3f(0,0, 0);

    glBegin(GL_LINES);
        glVertex2f(0, -240);
        glVertex2f(0, 240);
        glVertex2f(-320, 0);
        glVertex2f(320, 0);
    glEnd();

    int j=-240,k=-320,l=0;

    glBegin(GL_POINTS);
     while(j<=240){
        for( i=-320;i<=320;i++)
        glVertex2f(i,j);
        j+=20;
     }
     while(k<=320){
        for( l=-240;l<=240;l++)
        glVertex2f(k,l);
        k+=20;
     }
    glEnd();

    glColor3f(0.000, 0.749, 1.000);

   glBegin(GL_LINE_LOOP);
       glVertex2i(xmin,ymin);
       glVertex2i(xmin,ymax);
       glVertex2i(xmax,ymax);
       glVertex2i(xmax,ymin);
   glEnd();

   glColor3f(1.0,0.0,0.0);
   glBegin(GL_LINES);
       glVertex2i(xd1,yd1);
       glVertex2i(xd2,yd2);
   glEnd();
   glFlush();


}

int outcode(float x,float y)
{
    int code=0;
    if(y>ymax)
        code=8;
    if(y<ymin)
        code=4;
    if(x>xmax)
        code=2;
    if(x<xmin)
        code=1;

    return code;
}

void LineClipping(float x1,float y1,float x2,float y2)
{
    int c1=outcode(x1,y1);
    int c2=outcode(x2,y2);
    float m=(y2-y1)/(x2-x1);
    while((c1|c2)>0)
    {
        if((c1 & c2)>0)
        {
           exit(0);
        }

    float xi=x1;float yi=y1;
    int c=c1;
    if(c==0)
    {
         c=c2;
         xi=x2;
         yi=y2;
    }
    float x,y;
    if(c==8)
    {
       y=ymax;
       x=xi+ 1/m*(ymax-yi);
    }
    else
      if(c==4)
      {
          y=ymin;
          x=xi+1/m*(ymin-yi);
      }
      else
       if(c==2)
       {
           x=xmax;
           y=yi+m*(xmax-xi);
       }
       else
       if(c==1)
       {
           x=xmin;
           y=yi+m*(xmin-xi);
       }

       if(c==c1)
       {
           xd1=x;
           yd1=y;
           c1=outcode(xd1,yd1);
       }

       if(c==c2)
       {
           xd2=x;
           yd2=y;
           c2=outcode(xd2,yd2);
       }
}

 display();

}

void mykey(unsigned char key,int x,int y)
{
    if(key=='c')
    {
        LineClipping(xd1,yd1,xd2,yd2);
        glFlush();
    }
}


int main(int argc,char** argv)
{
    printf("Enter line co-ordinates:");
    cin>>xd1>>yd1>>xd2>>yd2;
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowSize(640,480);
    glutInitWindowPosition(400,200);
    glutCreateWindow("Clipping");
    glutDisplayFunc(display);
    glutKeyboardFunc(mykey);
    init(640, 480);
    glutMainLoop();
    return 0;
}
